@model Mvc3HomeBrewShed.Models.ChangePasswordModel

@{
    ViewBag.Title = "Change Password";
}

<h2>Change Password</h2>
<p>
    Use the form below to change your password. 
</p>
<p>
    New passwords are required to be a minimum of @Membership.MinRequiredPasswordLength characters in length.
</p>

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class="form-horizontal" })) 
{
    @Html.ValidationSummary(true, "Password change was unsuccessful. Please correct the errors and try again.", new { @class = "text-danger" })
    
    <div class="well">
        <fieldset>
            <legend>Account Information</legend>

             <div class="form-group">
                <label for="inputOldPassword" class="col-lg-4 control-label">@Html.LabelFor(m => m.OldPassword)</label>
                <div class="col-lg-6">                           
                     @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", placeholder = "Enter old password." })       
                     @Html.ValidationMessageFor(m => m.OldPassword, null, new { @class = " col-lg-offset-2 col-lg-10 text-danger" })      
                </div>         
            </div>

             <div class="form-group">
                <label for="inputNewPassword" class="col-lg-4 control-label">@Html.LabelFor(m => m.NewPassword)</label>
                <div class="col-lg-6">                           
                     @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", placeholder = "Enter new password." })       
                     @Html.ValidationMessageFor(m => m.NewPassword, null, new { @class = " col-lg-offset-2 col-lg-10 text-danger" })      
                </div>         
            </div>

             <div class="form-group">
                <label for="inputConfirmPassword" class="col-lg-4 control-label">@Html.LabelFor(m => m.ConfirmPassword)</label>
                <div class="col-lg-6">                           
                     @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm password." })       
                     @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = " col-lg-offset-2 col-lg-10 text-danger" })      
                </div>         
            </div>

            <p>                
                <button type="submit" class="btn-user btn-default"><i class="glyphicon glyphicon-lock"></i> Change Password</button>
            </p>



@*
            <div class="editor-label">
                @Html.LabelFor(m => m.OldPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.OldPassword)
                @Html.ValidationMessageFor(m => m.OldPassword)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.NewPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.NewPassword)
                @Html.ValidationMessageFor(m => m.NewPassword)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmPassword)
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>

            <p>
                <input type="submit" value="Change Password" />
            </p>*@
        </fieldset>
    </div>
}
